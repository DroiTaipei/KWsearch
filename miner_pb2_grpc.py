# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import miner_pb2 as miner__pb2


class MinerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.post = channel.unary_unary(
        '/entry.Miner/post',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )
    self.remove = channel.unary_unary(
        '/entry.Miner/remove',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )
    self.info = channel.unary_unary(
        '/entry.Miner/info',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )
    self.search = channel.unary_unary(
        '/entry.Miner/search',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )
    self.update = channel.unary_unary(
        '/entry.Miner/update',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )
    self.command = channel.unary_unary(
        '/entry.Miner/command',
        request_serializer=miner__pb2.Request.SerializeToString,
        response_deserializer=miner__pb2.Response.FromString,
        )


class MinerServicer(object):

  def post(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def remove(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def info(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def search(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def command(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MinerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'post': grpc.unary_unary_rpc_method_handler(
          servicer.post,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
      'remove': grpc.unary_unary_rpc_method_handler(
          servicer.remove,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
      'info': grpc.unary_unary_rpc_method_handler(
          servicer.info,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
      'search': grpc.unary_unary_rpc_method_handler(
          servicer.search,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
      'update': grpc.unary_unary_rpc_method_handler(
          servicer.update,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
      'command': grpc.unary_unary_rpc_method_handler(
          servicer.command,
          request_deserializer=miner__pb2.Request.FromString,
          response_serializer=miner__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'entry.Miner', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
