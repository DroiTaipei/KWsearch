# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: miner.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='miner.proto',
  package='entry',
  syntax='proto3',
  serialized_pb=_b('\n\x0bminer.proto\x12\x05\x65ntry\"^\n\x07Request\x12&\n\x04\x62ody\x18\x01 \x03(\x0b\x32\x18.entry.Request.BodyEntry\x1a+\n\tBodyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"`\n\x08Response\x12\'\n\x04\x62ody\x18\x01 \x03(\x0b\x32\x19.entry.Response.BodyEntry\x1a+\n\tBodyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\x92\x02\n\x05Miner\x12)\n\x04post\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12+\n\x06remove\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12)\n\x04info\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12+\n\x06search\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12+\n\x06update\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12,\n\x07\x63ommand\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_REQUEST_BODYENTRY = _descriptor.Descriptor(
  name='BodyEntry',
  full_name='entry.Request.BodyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='entry.Request.BodyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='entry.Request.BodyEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=116,
)

_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='entry.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='entry.Request.body', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_REQUEST_BODYENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=116,
)


_RESPONSE_BODYENTRY = _descriptor.Descriptor(
  name='BodyEntry',
  full_name='entry.Response.BodyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='entry.Response.BodyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='entry.Response.BodyEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=116,
)

_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='entry.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='entry.Response.body', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RESPONSE_BODYENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=214,
)

_REQUEST_BODYENTRY.containing_type = _REQUEST
_REQUEST.fields_by_name['body'].message_type = _REQUEST_BODYENTRY
_RESPONSE_BODYENTRY.containing_type = _RESPONSE
_RESPONSE.fields_by_name['body'].message_type = _RESPONSE_BODYENTRY
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(

  BodyEntry = _reflection.GeneratedProtocolMessageType('BodyEntry', (_message.Message,), dict(
    DESCRIPTOR = _REQUEST_BODYENTRY,
    __module__ = 'miner_pb2'
    # @@protoc_insertion_point(class_scope:entry.Request.BodyEntry)
    ))
  ,
  DESCRIPTOR = _REQUEST,
  __module__ = 'miner_pb2'
  # @@protoc_insertion_point(class_scope:entry.Request)
  ))
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.BodyEntry)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(

  BodyEntry = _reflection.GeneratedProtocolMessageType('BodyEntry', (_message.Message,), dict(
    DESCRIPTOR = _RESPONSE_BODYENTRY,
    __module__ = 'miner_pb2'
    # @@protoc_insertion_point(class_scope:entry.Response.BodyEntry)
    ))
  ,
  DESCRIPTOR = _RESPONSE,
  __module__ = 'miner_pb2'
  # @@protoc_insertion_point(class_scope:entry.Response)
  ))
_sym_db.RegisterMessage(Response)
_sym_db.RegisterMessage(Response.BodyEntry)


_REQUEST_BODYENTRY.has_options = True
_REQUEST_BODYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RESPONSE_BODYENTRY.has_options = True
_RESPONSE_BODYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class MinerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.post = channel.unary_unary(
          '/entry.Miner/post',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.remove = channel.unary_unary(
          '/entry.Miner/remove',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.info = channel.unary_unary(
          '/entry.Miner/info',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_unary(
          '/entry.Miner/search',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.update = channel.unary_unary(
          '/entry.Miner/update',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.command = channel.unary_unary(
          '/entry.Miner/command',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )


  class MinerServicer(object):

    def post(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def remove(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def info(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def command(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_MinerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'post': grpc.unary_unary_rpc_method_handler(
            servicer.post,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'remove': grpc.unary_unary_rpc_method_handler(
            servicer.remove,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'info': grpc.unary_unary_rpc_method_handler(
            servicer.info,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_unary_rpc_method_handler(
            servicer.search,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'command': grpc.unary_unary_rpc_method_handler(
            servicer.command,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'entry.Miner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaMinerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def post(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def remove(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def info(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def command(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaMinerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def post(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    post.future = None
    def remove(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    remove.future = None
    def info(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    info.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    search.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def command(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    command.future = None


  def beta_create_Miner_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('entry.Miner', 'command'): Request.FromString,
      ('entry.Miner', 'info'): Request.FromString,
      ('entry.Miner', 'post'): Request.FromString,
      ('entry.Miner', 'remove'): Request.FromString,
      ('entry.Miner', 'search'): Request.FromString,
      ('entry.Miner', 'update'): Request.FromString,
    }
    response_serializers = {
      ('entry.Miner', 'command'): Response.SerializeToString,
      ('entry.Miner', 'info'): Response.SerializeToString,
      ('entry.Miner', 'post'): Response.SerializeToString,
      ('entry.Miner', 'remove'): Response.SerializeToString,
      ('entry.Miner', 'search'): Response.SerializeToString,
      ('entry.Miner', 'update'): Response.SerializeToString,
    }
    method_implementations = {
      ('entry.Miner', 'command'): face_utilities.unary_unary_inline(servicer.command),
      ('entry.Miner', 'info'): face_utilities.unary_unary_inline(servicer.info),
      ('entry.Miner', 'post'): face_utilities.unary_unary_inline(servicer.post),
      ('entry.Miner', 'remove'): face_utilities.unary_unary_inline(servicer.remove),
      ('entry.Miner', 'search'): face_utilities.unary_unary_inline(servicer.search),
      ('entry.Miner', 'update'): face_utilities.unary_unary_inline(servicer.update),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Miner_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('entry.Miner', 'command'): Request.SerializeToString,
      ('entry.Miner', 'info'): Request.SerializeToString,
      ('entry.Miner', 'post'): Request.SerializeToString,
      ('entry.Miner', 'remove'): Request.SerializeToString,
      ('entry.Miner', 'search'): Request.SerializeToString,
      ('entry.Miner', 'update'): Request.SerializeToString,
    }
    response_deserializers = {
      ('entry.Miner', 'command'): Response.FromString,
      ('entry.Miner', 'info'): Response.FromString,
      ('entry.Miner', 'post'): Response.FromString,
      ('entry.Miner', 'remove'): Response.FromString,
      ('entry.Miner', 'search'): Response.FromString,
      ('entry.Miner', 'update'): Response.FromString,
    }
    cardinalities = {
      'command': cardinality.Cardinality.UNARY_UNARY,
      'info': cardinality.Cardinality.UNARY_UNARY,
      'post': cardinality.Cardinality.UNARY_UNARY,
      'remove': cardinality.Cardinality.UNARY_UNARY,
      'search': cardinality.Cardinality.UNARY_UNARY,
      'update': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'entry.Miner', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
