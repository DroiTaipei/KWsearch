# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: droipy.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='droipy.proto',
  package='entry',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x64roipy.proto\x12\x05\x65ntry\"g\n\x07Request\x12,\n\x07headers\x18\x02 \x03(\x0b\x32\x1b.entry.Request.HeadersEntry\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"i\n\x08Response\x12-\n\x07headers\x18\x02 \x03(\x0b\x32\x1c.entry.Response.HeadersEntry\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xb5\x01\n\x04\x44roi\x12+\n\x06loader\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12)\n\x04hook\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12(\n\x03job\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x12+\n\x06update\x12\x0e.entry.Request\x1a\x0f.entry.Response\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_REQUEST_HEADERSENTRY = _descriptor.Descriptor(
  name='HeadersEntry',
  full_name='entry.Request.HeadersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='entry.Request.HeadersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='entry.Request.HeadersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=126,
)

_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='entry.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='headers', full_name='entry.Request.headers', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_REQUEST_HEADERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=126,
)


_RESPONSE_HEADERSENTRY = _descriptor.Descriptor(
  name='HeadersEntry',
  full_name='entry.Response.HeadersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='entry.Response.HeadersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='entry.Response.HeadersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=126,
)

_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='entry.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='headers', full_name='entry.Response.headers', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RESPONSE_HEADERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=233,
)

_REQUEST_HEADERSENTRY.containing_type = _REQUEST
_REQUEST.fields_by_name['headers'].message_type = _REQUEST_HEADERSENTRY
_RESPONSE_HEADERSENTRY.containing_type = _RESPONSE
_RESPONSE.fields_by_name['headers'].message_type = _RESPONSE_HEADERSENTRY
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(

  HeadersEntry = _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), dict(
    DESCRIPTOR = _REQUEST_HEADERSENTRY,
    __module__ = 'droipy_pb2'
    # @@protoc_insertion_point(class_scope:entry.Request.HeadersEntry)
    ))
  ,
  DESCRIPTOR = _REQUEST,
  __module__ = 'droipy_pb2'
  # @@protoc_insertion_point(class_scope:entry.Request)
  ))
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.HeadersEntry)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(

  HeadersEntry = _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), dict(
    DESCRIPTOR = _RESPONSE_HEADERSENTRY,
    __module__ = 'droipy_pb2'
    # @@protoc_insertion_point(class_scope:entry.Response.HeadersEntry)
    ))
  ,
  DESCRIPTOR = _RESPONSE,
  __module__ = 'droipy_pb2'
  # @@protoc_insertion_point(class_scope:entry.Response)
  ))
_sym_db.RegisterMessage(Response)
_sym_db.RegisterMessage(Response.HeadersEntry)


_REQUEST_HEADERSENTRY.has_options = True
_REQUEST_HEADERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RESPONSE_HEADERSENTRY.has_options = True
_RESPONSE_HEADERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class DroiStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.loader = channel.unary_unary(
          '/entry.Droi/loader',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.hook = channel.unary_unary(
          '/entry.Droi/hook',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.job = channel.unary_unary(
          '/entry.Droi/job',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.update = channel.unary_unary(
          '/entry.Droi/update',
          request_serializer=Request.SerializeToString,
          response_deserializer=Response.FromString,
          )


  class DroiServicer(object):

    def loader(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def hook(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def job(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_DroiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'loader': grpc.unary_unary_rpc_method_handler(
            servicer.loader,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'hook': grpc.unary_unary_rpc_method_handler(
            servicer.hook,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'job': grpc.unary_unary_rpc_method_handler(
            servicer.job,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=Request.FromString,
            response_serializer=Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'entry.Droi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaDroiServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def loader(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def hook(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def job(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaDroiStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def loader(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    loader.future = None
    def hook(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    hook.future = None
    def job(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    job.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None


  def beta_create_Droi_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('entry.Droi', 'hook'): Request.FromString,
      ('entry.Droi', 'job'): Request.FromString,
      ('entry.Droi', 'loader'): Request.FromString,
      ('entry.Droi', 'update'): Request.FromString,
    }
    response_serializers = {
      ('entry.Droi', 'hook'): Response.SerializeToString,
      ('entry.Droi', 'job'): Response.SerializeToString,
      ('entry.Droi', 'loader'): Response.SerializeToString,
      ('entry.Droi', 'update'): Response.SerializeToString,
    }
    method_implementations = {
      ('entry.Droi', 'hook'): face_utilities.unary_unary_inline(servicer.hook),
      ('entry.Droi', 'job'): face_utilities.unary_unary_inline(servicer.job),
      ('entry.Droi', 'loader'): face_utilities.unary_unary_inline(servicer.loader),
      ('entry.Droi', 'update'): face_utilities.unary_unary_inline(servicer.update),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Droi_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('entry.Droi', 'hook'): Request.SerializeToString,
      ('entry.Droi', 'job'): Request.SerializeToString,
      ('entry.Droi', 'loader'): Request.SerializeToString,
      ('entry.Droi', 'update'): Request.SerializeToString,
    }
    response_deserializers = {
      ('entry.Droi', 'hook'): Response.FromString,
      ('entry.Droi', 'job'): Response.FromString,
      ('entry.Droi', 'loader'): Response.FromString,
      ('entry.Droi', 'update'): Response.FromString,
    }
    cardinalities = {
      'hook': cardinality.Cardinality.UNARY_UNARY,
      'job': cardinality.Cardinality.UNARY_UNARY,
      'loader': cardinality.Cardinality.UNARY_UNARY,
      'update': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'entry.Droi', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
